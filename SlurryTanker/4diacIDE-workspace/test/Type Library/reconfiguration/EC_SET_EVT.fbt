<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd">
<FBType Comment="Sets an event in- or output event of a FB instance (e.g. like an event sniffer)" Name="EC_SET_EVT">
  <Identification Classification="Reconfiguration" Function="Sets Event In-/Output" Standard="61499-1" Type="Execution Control Service"
    Description="Copyright (c) 2012 Profactor GmbH&#13;&#10; &#13;&#10;This program and the accompanying materials are made&#13;&#10;available under the terms of the Eclipse Public License 2.0&#13;&#10;which is available at https://www.eclipse.org/legal/epl-2.0/&#13;&#10;&#13;&#10;SPDX-License-Identifier: EPL-2.0"/>
  <VersionInfo Author="Gerhard Ebenhofer" Date="2012-05-31" Organization="Profactor GmbH" Version="1.0"/>
  <CompilerInfo>
    <Compiler Language="Cpp" Product="GCC" Vendor="GNU" Version="&gt;3.0"/>
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Comment="Service Request" Name="REQ" Type="Event">
        <With Var="QI"/>
        <With Var="DST"/>
        <With Var="FB_NAME"/>
        <With Var="FB_EVENT_IO"/>
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Comment="Confirmation of Requested Service" Name="CNF" Type="Event">
        <With Var="QO"/>
        <With Var="STATUS"/>
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Comment="Event Input Qualifier" Name="QI" Type="BOOL"/>
      <VarDeclaration Comment="FunctionBlock instance name" Name="FB_NAME" Type="WSTRING"/>
      <VarDeclaration Comment="event name" Name="FB_EVENT_IO" Type="WSTRING"/>
      <VarDeclaration Comment="Destination where the event has to be set (Syntax: ResourceName)" Name="DST" Type="WSTRING"/>
    </InputVars>
    <OutputVars>
      <VarDeclaration Comment="Event Output Qualifier" Name="QO" Type="BOOL"/>
      <VarDeclaration Comment="Service Status: RDY, NO_SUCH_OBJECT, INVALID_STATE" Name="STATUS" Type="WSTRING"/>
    </OutputVars>
  </InterfaceList>
  <Service Comment="Sets an event in- or output event of a FB instance (e.g. like an event sniffer)" LeftInterface="APPLICATION" RightInterface="RESOURCE">
    <ServiceSequence Name="normal_establishment">
      <ServiceTransaction>
        <InputPrimitive Event="INIT+" Interface="APPLICATION"/>
        <OutputPrimitive Event="INITO+" Interface="APPLICATION"/>
      </ServiceTransaction>
    </ServiceSequence>
    <ServiceSequence Name="unsuccessful_establishment">
      <ServiceTransaction>
        <InputPrimitive Event="INIT+" Interface="APPLICATION"/>
        <OutputPrimitive Event="INITO-" Interface="APPLICATION"/>
      </ServiceTransaction>
    </ServiceSequence>
    <ServiceSequence Name="request_confirm">
      <ServiceTransaction>
        <InputPrimitive Event="REQ+" Interface="APPLICATION"/>
        <OutputPrimitive Event="CNF+" Interface="APPLICATION"/>
      </ServiceTransaction>
    </ServiceSequence>
    <ServiceSequence Name="request_inhibited">
      <ServiceTransaction>
        <InputPrimitive Event="REQ-" Interface="APPLICATION"/>
        <OutputPrimitive Event="CNF-" Interface="APPLICATION"/>
      </ServiceTransaction>
    </ServiceSequence>
    <ServiceSequence Name="request_error">
      <ServiceTransaction>
        <InputPrimitive Event="REQ+" Interface="APPLICATION"/>
        <OutputPrimitive Event="CNF-" Interface="APPLICATION"/>
      </ServiceTransaction>
    </ServiceSequence>
    <ServiceSequence Name="application_initiated_termination">
      <ServiceTransaction>
        <InputPrimitive Event="INIT-" Interface="APPLICATION"/>
        <OutputPrimitive Event="INITO-" Interface="APPLICATION"/>
      </ServiceTransaction>
    </ServiceSequence>
    <ServiceSequence Name="resource_initiated_termination">
      <ServiceTransaction>
        <OutputPrimitive Event="INITO-" Interface="APPLICATION"/>
      </ServiceTransaction>
    </ServiceSequence>
  </Service>
</FBType>
