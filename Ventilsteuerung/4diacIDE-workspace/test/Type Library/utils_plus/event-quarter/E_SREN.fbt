<?xml version="1.0" encoding="UTF-8"?>
<FBType Name="E_SREN" Comment="Event-driven quad-state" >
	<Identification Standard="61499-1 Annex A" Description="Copyright (c)    &#10; &#10;This program and the accompanying materials are made  &#10;available under the terms of the Eclipse Public License 2.0  &#10;which is available at https://www.eclipse.org/legal/epl-2.0/  &#10; &#10;SPDX-License-Identifier: EPL-2.0  &#10;&#10;&#10;The Output Q will be TRUE only at S.  &#10;The Output Q will be FALSE only at R and ERR.  &#10;The Output Q will be not changed at NONE  " >
	</Identification>
	<InterfaceList>
		<EventInputs>
			<Event Name="S" Type="Event" Comment="Enabled (on, active, etc.)" >
			</Event>
			<Event Name="R" Type="Event" Comment="Disabled (off, passive, etc.)" >
			</Event>
			<Event Name="ERR" Type="Event" Comment="Error indicator" >
			</Event>
			<Event Name="NONE" Type="Event" Comment="Not available or not installed" >
			</Event>
		</EventInputs>
		<EventOutputs>
			<Event Name="EO" Type="Event" Comment="Output Q has changed" >
				<With Var="Q"/>
				<With Var="QB"/>
			</Event>
		</EventOutputs>
		<OutputVars>
			<VarDeclaration Name="Q" Type="BOOL" Comment="BOOL Output"  InitialValue="FALSE"/>
			<VarDeclaration Name="QB" Type="BYTE" Comment="2bit (quarter Byte) Output with 4 States"  InitialValue="quarter::COMMAND_DISABLE"/>
		</OutputVars>
	</InterfaceList>
	<BasicFB>
		<InternalVars>
			<VarDeclaration Name="old_Q" Type="BOOL" Comment="old BOOL Output"  InitialValue="FALSE"/>
			<VarDeclaration Name="old_QB" Type="BYTE" Comment="old 2bit (quarter Byte) Output with 4 States"  InitialValue="quarter::COMMAND_DISABLE"/>
		</InternalVars>
		<ECC>
			<ECState Name="START" Comment="Initial State"  x="133.33" y="1466.67">
			</ECState>
			<ECState Name="SET" x="1600" y="400">
				<ECAction Algorithm="SET"/>
			</ECState>
			<ECState Name="RESET" x="1600" y="1200">
				<ECAction Algorithm="RESET"/>
			</ECState>
			<ECState Name="Error" x="1600" y="1866.67">
				<ECAction Algorithm="ERROR"/>
			</ECState>
			<ECState Name="none" x="1600" y="2533.33">
				<ECAction Algorithm="NONE"/>
			</ECState>
			<ECState Name="FireEvent" x="5333.33" y="1333.33">
				<ECAction Output="EO"/>
			</ECState>
			<ECTransition Source="START" Destination="SET" Condition="S" Comment="" x="1200" y="546.67"/>
			<ECTransition Source="START" Destination="RESET" Condition="R" Comment="" x="1313.33" y="1080"/>
			<ECTransition Source="START" Destination="Error" Condition="ERR" Comment="" x="1460" y="1600"/>
			<ECTransition Source="SET" Destination="FireEvent" Condition="[old_Q &lt;&gt; Q OR old_QB &lt;&gt; QB]" Comment="" x="3966.67" y="1006.67"/>
			<ECTransition Source="RESET" Destination="FireEvent" Condition="[old_Q &lt;&gt; Q OR old_QB &lt;&gt; QB]" Comment="" x="4020" y="1373.33"/>
			<ECTransition Source="Error" Destination="FireEvent" Condition="[old_Q &lt;&gt; Q OR old_QB &lt;&gt; QB]" Comment="" x="3946.67" y="1646.67"/>
			<ECTransition Source="none" Destination="FireEvent" Condition="[old_Q &lt;&gt; Q OR old_QB &lt;&gt; QB]" Comment="" x="3893.33" y="1926.67"/>
			<ECTransition Source="FireEvent" Destination="START" Condition="1" Comment="" x="906.67" y="3266.67"/>
			<ECTransition Source="SET" Destination="START" Condition="1" Comment="" x="993.33" y="993.33"/>
			<ECTransition Source="RESET" Destination="START" Condition="1" Comment="" x="1033.33" y="1393.33"/>
			<ECTransition Source="Error" Destination="START" Condition="1" Comment="" x="1060" y="1713.33"/>
			<ECTransition Source="none" Destination="START" Condition="1" Comment="" x="926.67" y="2066.67"/>
			<ECTransition Source="START" Destination="none" Condition="NONE" Comment="" x="1200" y="1946.67"/>
		</ECC>
		<Algorithm Name="SET">
			<ST><![CDATA[ALGORITHM SET
Q := TRUE;
QB := quarter::COMMAND_ENABLE;
END_ALGORITHM]]></ST>
		</Algorithm>
		<Algorithm Name="RESET">
			<ST><![CDATA[

ALGORITHM RESET
Q := FALSE;
QB := quarter::COMMAND_DISABLE;
END_ALGORITHM]]></ST>
		</Algorithm>
		<Algorithm Name="ERROR">
			<ST><![CDATA[

ALGORITHM ERROR
Q := FALSE;
QB := quarter::STATUS_ERROR;
END_ALGORITHM]]></ST>
		</Algorithm>
		<Algorithm Name="NONE">
			<ST><![CDATA[

ALGORITHM NONE
// Q Don't care/take no action (leave function as is)
QB := quarter::COMMAND_NO_ACTION;
END_ALGORITHM]]></ST>
		</Algorithm>
		<Algorithm Name="HOLD">
			<ST><![CDATA[

ALGORITHM HOLD
old_Q := Q;
old_QB := QB;
END_ALGORITHM

]]></ST>
		</Algorithm>
	</BasicFB>
</FBType>
