<?xml version="1.0" encoding="UTF-8"?>
<Function Name="LWORD_TO_QUARTERS" Comment="">
	<Identification Standard="61499-1">
	</Identification>
	<VersionInfo Version="1.0" Author="franz" Date="2024-02-22">
	</VersionInfo>
	<CompilerInfo>
	</CompilerInfo>
	<InterfaceList>
		<EventInputs>
			<Event Name="REQ" Type="Event" Comment="Normal Execution Request">
				<With Var="IN"/>
			</Event>
		</EventInputs>
		<EventOutputs>
			<Event Name="CNF" Type="Event" Comment="Execution Confirmation">
				<With Var="OUT_00"/>
				<With Var="OUT_01"/>
				<With Var="OUT_02"/>
				<With Var="OUT_03"/>
				<With Var="OUT_04"/>
				<With Var="OUT_05"/>
				<With Var="OUT_06"/>
				<With Var="OUT_07"/>
				<With Var="OUT_08"/>
				<With Var="OUT_09"/>
				<With Var="OUT_10"/>
				<With Var="OUT_11"/>
				<With Var="OUT_12"/>
				<With Var="OUT_13"/>
				<With Var="OUT_14"/>
				<With Var="OUT_15"/>
				<With Var="OUT_16"/>
				<With Var="OUT_17"/>
				<With Var="OUT_18"/>
				<With Var="OUT_19"/>
				<With Var="OUT_20"/>
				<With Var="OUT_21"/>
				<With Var="OUT_22"/>
				<With Var="OUT_23"/>
				<With Var="OUT_24"/>
				<With Var="OUT_25"/>
				<With Var="OUT_26"/>
				<With Var="OUT_27"/>
				<With Var="OUT_28"/>
				<With Var="OUT_29"/>
				<With Var="OUT_30"/>
				<With Var="OUT_31"/>
			</Event>
		</EventOutputs>
		<InputVars>
			<VarDeclaration Name="IN" Type="LWORD" Comment="LWORD Input"/>
		</InputVars>
		<OutputVars>
			<VarDeclaration Name="OUT_00" Type="BYTE" Comment="QUARTER BYTE 00"/>
			<VarDeclaration Name="OUT_01" Type="BYTE" Comment="QUARTER BYTE 01"/>
			<VarDeclaration Name="OUT_02" Type="BYTE" Comment="QUARTER BYTE 02"/>
			<VarDeclaration Name="OUT_03" Type="BYTE" Comment="QUARTER BYTE 03"/>
			<VarDeclaration Name="OUT_04" Type="BYTE" Comment="QUARTER BYTE 04"/>
			<VarDeclaration Name="OUT_05" Type="BYTE" Comment="QUARTER BYTE 05"/>
			<VarDeclaration Name="OUT_06" Type="BYTE" Comment="QUARTER BYTE 06"/>
			<VarDeclaration Name="OUT_07" Type="BYTE" Comment="QUARTER BYTE 07"/>
			<VarDeclaration Name="OUT_08" Type="BYTE" Comment="QUARTER BYTE 08"/>
			<VarDeclaration Name="OUT_09" Type="BYTE" Comment="QUARTER BYTE 09"/>
			<VarDeclaration Name="OUT_10" Type="BYTE" Comment="QUARTER BYTE 10"/>
			<VarDeclaration Name="OUT_11" Type="BYTE" Comment="QUARTER BYTE 11"/>
			<VarDeclaration Name="OUT_12" Type="BYTE" Comment="QUARTER BYTE 12"/>
			<VarDeclaration Name="OUT_13" Type="BYTE" Comment="QUARTER BYTE 13"/>
			<VarDeclaration Name="OUT_14" Type="BYTE" Comment="QUARTER BYTE 14"/>
			<VarDeclaration Name="OUT_15" Type="BYTE" Comment="QUARTER BYTE 15"/>
			<VarDeclaration Name="OUT_16" Type="BYTE" Comment="QUARTER BYTE 16"/>
			<VarDeclaration Name="OUT_17" Type="BYTE" Comment="QUARTER BYTE 17"/>
			<VarDeclaration Name="OUT_18" Type="BYTE" Comment="QUARTER BYTE 18"/>
			<VarDeclaration Name="OUT_19" Type="BYTE" Comment="QUARTER BYTE 19"/>
			<VarDeclaration Name="OUT_20" Type="BYTE" Comment="QUARTER BYTE 20"/>
			<VarDeclaration Name="OUT_21" Type="BYTE" Comment="QUARTER BYTE 21"/>
			<VarDeclaration Name="OUT_22" Type="BYTE" Comment="QUARTER BYTE 22"/>
			<VarDeclaration Name="OUT_23" Type="BYTE" Comment="QUARTER BYTE 23"/>
			<VarDeclaration Name="OUT_24" Type="BYTE" Comment="QUARTER BYTE 24"/>
			<VarDeclaration Name="OUT_25" Type="BYTE" Comment="QUARTER BYTE 25"/>
			<VarDeclaration Name="OUT_26" Type="BYTE" Comment="QUARTER BYTE 26"/>
			<VarDeclaration Name="OUT_27" Type="BYTE" Comment="QUARTER BYTE 27"/>
			<VarDeclaration Name="OUT_28" Type="BYTE" Comment="QUARTER BYTE 28"/>
			<VarDeclaration Name="OUT_29" Type="BYTE" Comment="QUARTER BYTE 29"/>
			<VarDeclaration Name="OUT_30" Type="BYTE" Comment="QUARTER BYTE 30"/>
			<VarDeclaration Name="OUT_31" Type="BYTE" Comment="QUARTER BYTE 31"/>
		</OutputVars>
	</InterfaceList>
	<FunctionBody>
		<ST><![CDATA[FUNCTION LWORD_TO_QUARTERS

VAR_INPUT
	IN : LWORD;    // LWORD Input
END_VAR

VAR_OUTPUT
	OUT_00 : BYTE;    // QUARTER BYTE 00
	OUT_01 : BYTE;    // QUARTER BYTE 01
	OUT_02 : BYTE;    // QUARTER BYTE 02
	OUT_03 : BYTE;    // QUARTER BYTE 03
	OUT_04 : BYTE;    // QUARTER BYTE 04
	OUT_05 : BYTE;    // QUARTER BYTE 05
	OUT_06 : BYTE;    // QUARTER BYTE 06
	OUT_07 : BYTE;    // QUARTER BYTE 07
	OUT_08 : BYTE;    // QUARTER BYTE 08
	OUT_09 : BYTE;    // QUARTER BYTE 09
	OUT_10 : BYTE;    // QUARTER BYTE 10
	OUT_11 : BYTE;    // QUARTER BYTE 11
	OUT_12 : BYTE;    // QUARTER BYTE 12
	OUT_13 : BYTE;    // QUARTER BYTE 13
	OUT_14 : BYTE;    // QUARTER BYTE 14
	OUT_15 : BYTE;    // QUARTER BYTE 15
	OUT_16 : BYTE;    // QUARTER BYTE 16
	OUT_17 : BYTE;    // QUARTER BYTE 17
	OUT_18 : BYTE;    // QUARTER BYTE 18
	OUT_19 : BYTE;    // QUARTER BYTE 19
	OUT_20 : BYTE;    // QUARTER BYTE 20
	OUT_21 : BYTE;    // QUARTER BYTE 21
	OUT_22 : BYTE;    // QUARTER BYTE 22
	OUT_23 : BYTE;    // QUARTER BYTE 23
	OUT_24 : BYTE;    // QUARTER BYTE 24
	OUT_25 : BYTE;    // QUARTER BYTE 25
	OUT_26 : BYTE;    // QUARTER BYTE 26
	OUT_27 : BYTE;    // QUARTER BYTE 27
	OUT_28 : BYTE;    // QUARTER BYTE 28
	OUT_29 : BYTE;    // QUARTER BYTE 29
	OUT_30 : BYTE;    // QUARTER BYTE 30
	OUT_31 : BYTE;    // QUARTER BYTE 31
END_VAR

(* this Function extracts the 32 QUARTER BYTE from a lword *)
OUT_00 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_00, SHFT_QUARTER_00));
OUT_01 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_01, SHFT_QUARTER_01));
OUT_02 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_02, SHFT_QUARTER_02));
OUT_03 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_03, SHFT_QUARTER_03));
OUT_04 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_04, SHFT_QUARTER_04));
OUT_05 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_05, SHFT_QUARTER_05));
OUT_06 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_06, SHFT_QUARTER_06));
OUT_07 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_07, SHFT_QUARTER_07));
OUT_08 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_08, SHIFT_QUARTER_08));
OUT_09 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_09, SHIFT_QUARTER_09));
OUT_10 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_10, SHIFT_QUARTER_10));
OUT_11 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_11, SHIFT_QUARTER_11));
OUT_12 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_12, SHIFT_QUARTER_12));
OUT_13 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_13, SHIFT_QUARTER_13));
OUT_14 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_14, SHIFT_QUARTER_14));
OUT_15 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_15, SHIFT_QUARTER_15));
OUT_16 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_16, SHIFT_QUARTER_16));
OUT_17 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_17, SHIFT_QUARTER_17));
OUT_18 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_18, SHIFT_QUARTER_18));
OUT_19 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_19, SHIFT_QUARTER_19));
OUT_20 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_20, SHIFT_QUARTER_20));
OUT_21 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_21, SHIFT_QUARTER_21));
OUT_22 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_22, SHIFT_QUARTER_22));
OUT_23 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_23, SHIFT_QUARTER_23));
OUT_24 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_24, SHIFT_QUARTER_24));
OUT_25 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_25, SHIFT_QUARTER_25));
OUT_26 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_26, SHIFT_QUARTER_26));
OUT_27 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_27, SHIFT_QUARTER_27));
OUT_28 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_28, SHIFT_QUARTER_28));
OUT_29 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_29, SHIFT_QUARTER_29));
OUT_30 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_30, SHIFT_QUARTER_30));
OUT_31 := LWORD_TO_BYTE(SHR(IN AND LWORD_QUARTER_31, SHIFT_QUARTER_31));

END_FUNCTION
]]></ST>
	</FunctionBody>
</Function>
